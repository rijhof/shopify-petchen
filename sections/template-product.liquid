<!-- templates/product.liquid -->
{{ 'template-product.css' | asset_url | stylesheet_tag }}
{{ 'snippet-accordion.css' | asset_url | stylesheet_tag }}

{% assign selected_variant = product.selected_or_first_available_variant %}

<div class="product-container">
  <div class="product-grid">
    <div class="product-column product-column--media">
      {% render 'product-thumbslider', product: product %}
    </div>

    <div class="product-column product-column--info">
      <div class="product-wishlist">
        <button type="button" class="button-secondary icon icon-empty" aria-label="Add to wishlist">
          <img src="{{ 'icon-header--heart.svg' | asset_url }}" alt="" aria-hidden="true">
        </button>
      </div>

      {% render 'product-info', product: product %}

      {% render 'product-box-info', product: product, selected_variant: selected_variant, section: section %}

      {% if product.metafields.custom.anwendung != blank or product.metafields.custom.inhaltsstoffe != blank %}
        <div class="product-accordions">
          {% if product.metafields.custom.anwendung != blank %}
            {% assign usage_html = product.metafields.custom.anwendung | metafield_tag %}
            {% render 'accordion', title: 'Anwendungsf√§lle', content: usage_html, open: true %}
          {% endif %}

          {% if product.metafields.custom.inhaltsstoffe != blank %}
            {% assign ingredients_content = product.metafields.custom.inhaltsstoffe | metafield_tag %}
            {% render 'accordion', title: 'Ingredients', content: ingredients_content %}
          {% endif %}
        </div>
      {% endif %}
    </div>
  </div>
</div>

<style>
  .product-container {
    padding: var(--component-spacing-y) 0;
  }

  .product-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--grid-gap-column);
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: 0 var(--container-padding-x);
  }

  @media (min-width: 1024px) {
    .product-grid {
      grid-template-columns: 1fr 1fr;
    }
  }

  .product-column {
    position: relative;
  }

  .product-wishlist {
    display: flex;
    justify-content: flex-end;
  }

  .product-wishlist button {
    margin-bottom: 0;
  }

  @media (max-width: 1023px) {
    .product-wishlist {
      position: absolute;
      top: calc(var(--baseline) * 2);
      right: calc(var(--baseline) * 2);
      z-index: 10;
    }
  }
</style>

<script src="{{ 'snippet-accordion.js' | asset_url }}" defer></script>

<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();
      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
        this.updateMedia();
      }
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find(variant => {
        const findings = !variant.options.map((option, index) => {
          return this.options[index] === option;
        }).includes(false);
        if (findings) return variant;
      });
    }

    updateURL() {
      if (!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
              .then((response) => response.text())
              .then((responseText) => {
                const id = `price-${this.dataset.section}`;
                const html = new DOMParser().parseFromString(responseText, 'text/html');
                const oldPrice = document.getElementById(id);
                const newPrice = html.getElementById(id);
                if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
              });
    }

    updateMedia() {
      if (!this.currentVariant.featured_media) return;
      const newMediaId = this.currentVariant.featured_media.id;
      const thumbSlider = document.querySelector('.product-thumbslider');
      if (thumbSlider) {
        const targetThumb = thumbSlider.querySelector(`[data-media-id="${newMediaId}"]`);
        if (targetThumb) {
          targetThumb.click();
        }
      }
    }
  }
  customElements.define("variant-selector", VariantSelector);
</script>
<script src="{{ 'snippet-accordion.js' | asset_url }}" defer></script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "info_box",
      "name": "Info Box Item",
      "settings": [
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "options": [
            {
              "value": "checkmark",
              "label": "Checkmark"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "shopping-bag",
              "label": "Shopping Bag"
            },
            {
              "value": "avatar",
              "label": "Avatar"
            },
            {
              "value": "five-stars",
              "label": "Five Stars"
            }
          ],
          "default": "checkmark"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Free shipping from $50"
        }
      ]
    }
  ]
}
{% endschema %}